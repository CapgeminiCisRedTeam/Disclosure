# CVE-ID | RealGimm by GruppoSCAI - Reflected Cross-site Scripting
Two reflected cross-site scripting vunerabilities were found in RealGimm version 1.1.37p38. What follows is a description of the steps taken to perform the exploit.

## Proof of Concept 1
Whenever the application fails to handle an unexpected request, it redirects the user to the page *ErroreNonGestito.aspx*, that is used to display the unhandled exception.
An example of unhandled exception can be caused in the *Log ObjectTrace* feature, that can be found under *System -> Scheduler -> Log ObjectTrace*.
Specifically, by intercepting the call related to the Filter button, it can be observed that if the pentester removes the value of the VIEWSTATE by inserting random strings the user is redirected to *https://[REALGIMM_HOST]/RealGimmWeb/Pages/ErroreNonGestito.aspx*
where both the user-agent and referer values are reflected. Therefore, if the following payload is inserted in one of those headers, the XSS will be triggered.
```
</span><script>alert(“XSS REFLECTED”)</script>
```
![VIEWSTATE and user agent value modified](link)

![XSS injected](link)
When viewing the page through a browser, it is possible to notice that the payload is triggered.
![XSS triggered](link)

## Proof of Concept 2
Similarly as before, the webpage *ErroreNonGestito.aspx* can be used to reflect and trigger certain payloads contained in the request.
Specifically, it can be observed that if the pentester uses the following payload in the value of the VIEWSTATE 
```
%3c%2f%73%70%61%6e%3e%3c%53%63%52%69%50%74%3e%61%6c%65%72%74%28%31%29%3c%2f%53%63%52%69%50%74%3e
```
it can be noticed that the app fails to handle the call and redirects to the endpoint *https://[REALGIMM_HOST]/RealGimmWeb/Pages/ErroreNonGestito.aspx*, where the input is not properly sanitized, as shown in the two figures below.
![VIEWSTATE value modified](link)
![XSS injected](link)
In viewing the page through a browser, it is possible to notice that the payload is triggered.
![XSS triggered](link)
